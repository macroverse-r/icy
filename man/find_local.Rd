% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_local.R
\name{find_local}
\alias{find_local}
\title{Find Local Configuration File}
\usage{
find_local(
  package = NULL,
  fn_local = NULL,
  case_format = "snake_case",
  verbose = FALSE
)
}
\arguments{
\item{package}{Character string with the package name. If NULL (default),
uses the current package name.}

\item{fn_local}{Character string with custom filename pattern. If NULL,
uses the default naming pattern based on case_format.}

\item{case_format}{Character string indicating the case format to use for the filename search.
Options are:
\itemize{
\item "snake_case" (default): Searches for files like "package_config_local.yml"
\item "camelCase": Searches for files like "packageConfigLocal.yml"
\item "PascalCase": Searches for files like "PackageConfigLocal.yml"
\item "kebab-case": Searches for files like "package-config-local.yml"
}}

\item{verbose}{Logical indicating whether to display warnings when no file
is found or multiple files match (default: TRUE).}
}
\value{
Character string with the full path to the found YAML file, or NULL if
no file is found.
}
\description{
Locates the local YAML configuration file that contains environment variable definitions
for a specified package. The function searches within the package's directory for a
local configuration file matching the expected naming pattern.
}
\details{
This is a read-only operation that simply finds existing files. To create a new local
configuration file, use \code{\link{create_local}}.
}
\examples{
\dontrun{
# Find the local config file for a package
local_path <- find_local("mypackage")

# Find with custom naming pattern
local_path <- find_local("mypackage", fn_local = "my_custom_config.yml")

# Find with different case format
local_path <- find_local("mypackage", case_format = "camelCase")
}

}
