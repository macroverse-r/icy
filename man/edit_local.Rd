% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edit_local.R
\name{edit_local}
\alias{edit_local}
\title{Edit Local Configuration File}
\usage{
edit_local(
  package = get_package_name(),
  fn_local = NULL,
  editor = "auto",
  validate = TRUE,
  sync = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{package}{Character string with the package name. Defaults to \code{get_package_name()} to detect the calling package.}

\item{fn_local}{Character string with custom filename for the local config.
If NULL, uses the fuzzy finder to locate the standard local config file.}

\item{editor}{Character string specifying which editor to use:
\itemize{
\item "auto" (default): Use R's default \code{file.edit()}
\item "rstudio": Force RStudio editor if available
\item "vscode" or "code": Open in Visual Studio Code
\item "vim", "nano", "emacs": Terminal editors
}
Falls back to \code{file.edit()} if specified editor is unavailable.}

\item{validate}{Logical. If TRUE (default), validates YAML syntax after editing
and shows warnings for syntax errors. Does not prevent saving.}

\item{sync}{Logical. If TRUE, automatically syncs changes to current R session
using \code{sync()} after editing. Defaults to FALSE.}

\item{verbose}{Logical. If TRUE (default), displays informative messages about
the editing process.}
}
\value{
Invisibly returns the path to the edited file.
}
\description{
Opens the local YAML configuration file for editing in your preferred editor.
This provides a better experience than just \code{file.edit(find_config_files())} by
offering editor selection, validation, and session synchronization options.
}
\details{
The function locates the local configuration file using the existing fuzzy
matching system, opens it in the specified editor, and optionally validates
YAML syntax and syncs changes to the current R session after editing.
}
\examples{
\dontrun{
# Open local config in default editor
edit_local("mypackage")

# Open in VS Code and sync changes to session
edit_local("mypackage", editor = "vscode", sync = TRUE)

# Edit specific config file without validation
edit_local("mypackage", fn_local = "custom_config.yml", validate = FALSE)

# Quiet editing (no messages)
edit_local("mypackage", verbose = FALSE)
}

}
\seealso{
\code{\link{find_config_files}} for locating config files,
\code{\link{create_local}} for creating new config files,
\code{\link{sync}} for syncing changes to R session
}
