% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qconfig.R
\name{qconfig}
\alias{qconfig}
\title{Interactive Configuration Variable Selection and Writing}
\usage{
qconfig(
  var_name,
  package = get_package_name(),
  user = "default",
  description = NULL,
  options = NULL,
  allow_skip = TRUE,
  note = NULL,
  arg_only = FALSE,
  write = "local",
  type = NULL,
  verbose = FALSE
)
}
\arguments{
\item{var_name}{Character string with the environment variable name (e.g., "DUMMY_API_KEY").}

\item{package}{Character string with the package name. Defaults to \code{get_package_name()} to detect the calling package.}

\item{user}{Character string for the user/section in the YAML file (default: "default").}

\item{description}{Character string with custom description. If NULL, uses description
from template YAML descriptions section. If no template description exists, no description is shown.}

\item{options}{Vector of option values to present to the user. If NULL, uses options
from template YAML options section. If both are provided, argument options come first,
followed by template options (unless arg_only = TRUE).}

\item{allow_skip}{Logical. If TRUE, allows user to skip configuration by pressing Enter
without selecting an option. Returns NULL when skipped. Defaults to TRUE.}

\item{note}{Character string with additional informational note to display before options.}

\item{arg_only}{Logical. If TRUE, only uses options from the argument and ignores template
options. If FALSE (default), merges argument and template options.}

\item{write}{Character string specifying where to write the configuration.
Options: "local" (default, writes to local YAML config), "renviron" (writes to ~/.Renviron),
"session" (sets in current R session only using Sys.setenv).}

\item{type}{Character string specifying the expected type for the variable.
If NULL (default), uses type from template file. If not found in template, keeps value as-is.
Possible values: "character", "integer", "numeric", "logical".}

\item{verbose}{Logical. If TRUE, displays confirmation messages. Defaults to FALSE.}
}
\value{
The selected option value, or NULL if allow_skip = TRUE and user skips.
If no options are available (neither argument nor template), prompts for manual text input.
The value is written to the specified configuration location before being returned.
}
\description{
Prompts the user to configure a specific environment variable with options
from the template YAML file and/or user-provided options, then writes the
selected value to the specified configuration location. This function
integrates with icy's template system to provide descriptions and predefined
options for configuration variables.
}
\details{
This function follows the pattern established by MSGM's ask_for_directory function.
It integrates with icy's template system to provide:
\itemize{
\item Automatic descriptions from template descriptions section
\item Predefined options from template options section
\item Manual text input fallback when no options are available
\item Skip functionality for optional configuration
}

Priority for descriptions: argument description > template description > no description
Priority for options: argument options + template options (argument first), or arg_only for argument only
}
\examples{
\dontrun{
# Basic usage with template integration (writes to local config)
api_key <- qconfig("DUMMY_API_KEY", package = "dummy")
# Uses template description and options, writes to local YAML config

# Write to ~/.Renviron instead
port <- qconfig("DUMMY_DB_PORT", write = "renviron")
# Writes selected value to ~/.Renviron file

# Set only in current session
log_level <- qconfig("DUMMY_LOG_LEVEL", write = "session")
# Sets value using Sys.setenv() for current session only

# Add custom options to template options
timeout <- qconfig("DUMMY_TIMEOUT", options = c("30", "60", "120"))
# Shows custom options first, then template options, writes to local config

# Skip functionality - no writing occurs
optional_var <- qconfig("DUMMY_OPTIONAL", allow_skip = TRUE)
# Can return NULL if user skips, no configuration is written
}
}
