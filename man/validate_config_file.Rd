% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate_config_file.R
\name{validate_config_file}
\alias{validate_config_file}
\title{Validate Configuration File}
\usage{
validate_config_file(
  file_path,
  type = c("template", "local"),
  package = NULL,
  template_path = NULL,
  verbose = FALSE,
  quick = FALSE
)
}
\arguments{
\item{file_path}{Path to the configuration file to validate}

\item{type}{Type of configuration file: "template" or "local"}

\item{package}{Package name for context. If NULL, attempts to detect.}

\item{template_path}{Path to template file (required for local validation)}

\item{verbose}{Logical. If TRUE, shows detailed validation messages}

\item{quick}{Logical. If TRUE, performs minimal validation for performance}
}
\value{
List with validation results containing:
\describe{
\item{valid}{Logical indicating if validation passed}
\item{errors}{Character vector of error messages}
\item{warnings}{Character vector of warning messages}
}
}
\description{
Validates a configuration file (template or local) according to its type.
Both template and local files must have an inheritances section, but
different validation rules apply to each type.
}
\details{
Template validation checks:
\itemize{
\item Must have inheritances section (can be empty)
\item Validates inheritance relationships
\item Checks metadata sections (types, descriptions, options, notes)
\item Validates section structure
}

Local validation checks:
\itemize{
\item Must have inheritances section (can be empty)
\item Validates values against template's types
\item Checks variable names exist in template
\item Validates values are within template's options if defined
\item Validates inheritance relationships
}
}
\examples{
\dontrun{
# Validate a template file
result <- validate_config_file("inst/mypackage_config_template.yml", type = "template")

# Validate a local config file
result <- validate_config_file("~/.config/R/mypackage/config.yml", 
                               type = "local",
                               template_path = "inst/mypackage_config_template.yml")
}

}
