% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qconfig.R
\name{.validate_and_normalize_qconfig_params}
\alias{.validate_and_normalize_qconfig_params}
\title{Interactive Configuration Variable Selection and Writing}
\usage{
.validate_and_normalize_qconfig_params(
  var_name,
  package,
  user,
  description,
  options,
  allow_skip,
  note,
  arg_only,
  write,
  type,
  verbose
)
}
\arguments{
\item{var_name}{Variable name}

\item{package}{Package name}

\item{user}{User section}

\item{description}{Description text}

\item{options}{Option values}

\item{allow_skip}{Allow skip flag}

\item{note}{Note text}

\item{arg_only}{Argument only flag}

\item{write}{Write destination}

\item{type}{Variable type}

\item{verbose}{Verbose flag}
}
\value{
The selected option value, or NULL if allow_skip = TRUE and user skips.
If no options are available (neither argument nor template), prompts for manual text input.
The value is written to the specified configuration location before being returned.

List of validated and normalized parameters
}
\description{
Prompts the user to configure a specific environment variable with options
from the template YAML file and/or user-provided options, then writes the
selected value to the specified configuration location. This function
integrates with icy's template system to provide descriptions and predefined
options for configuration variables.
}
\details{
This function follows the pattern established by MSGM's ask_for_directory function.
It integrates with icy's template system to provide:
\itemize{
\item Automatic descriptions from template descriptions section
\item Predefined options from template options section
\item Manual text input fallback when no options are available
\item Skip functionality for optional configuration
}

Priority for descriptions: argument description > template description > no description
Priority for options: argument options + template options (argument first), or arg_only for argument only
}
\examples{
\dontrun{
# Basic usage with template integration (writes to local config)
api_key <- qconfig("DUMMY_API_KEY", package = "dummy")
# Uses template description and options, writes to local YAML config

# Write to ~/.Renviron instead
port <- qconfig("DUMMY_DB_PORT", write = "renviron")
# Writes selected value to ~/.Renviron file

# Set only in current session
log_level <- qconfig("DUMMY_LOG_LEVEL", write = "session")
# Sets value using Sys.setenv() for current session only

# Add custom options to template options
timeout <- qconfig("DUMMY_TIMEOUT", options = c("30", "60", "120"))
# Shows custom options first, then template options, writes to local config

# Skip functionality - no writing occurs
optional_var <- qconfig("DUMMY_OPTIONAL", allow_skip = TRUE)
# Can return NULL if user skips, no configuration is written
}

Validate and Normalize qconfig Parameters

Internal helper function to validate input parameters and apply type-specific logic.

}
\keyword{internal}
