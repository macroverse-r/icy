% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup.R
\name{setup}
\alias{setup}
\title{Interactive Package Setup}
\usage{
setup(
  package = get_package_name(),
  user = "default",
  write = "local",
  skip_configured = FALSE,
  vars = NULL,
  verbose = FALSE
)
}
\arguments{
\item{package}{Character string with the package name. Defaults to \code{get_package_name()} to detect the calling package.}

\item{user}{Character string for the user/section in the YAML file (default: "default").}

\item{write}{Character string specifying where to write the configuration.
Options: "local" (default, writes to local YAML config), "renviron" (writes to ~/.Renviron),
"session" (sets in current R session only using Sys.setenv).}

\item{skip_configured}{Logical. If TRUE (default), skips variables that already have
non-default values configured. Set to FALSE to reconfigure all variables.}

\item{vars}{Character vector of variable names to configure. If NULL (default),
configures all variables from template.}

\item{verbose}{Logical. If TRUE, displays confirmation messages. Defaults to FALSE.}
}
\value{
A named list of all configured values (invisible). Values that were
skipped are included as NULL in the list.
}
\description{
Walks through all variables defined in the package template for interactive
configuration. Provides a guided setup experience for first-time package users.
}
\details{
This function reads all variables from the package template and presents them
for interactive configuration using qconfig(). It provides:
\itemize{
\item Progress tracking through the configuration process
\item Integration with template descriptions, options, and type detection
\item Option to skip already-configured variables
\item Flexible output destinations (local config, .Renviron, or session)
}
}
\examples{
\dontrun{
# Full package setup
setup()

# Setup specific variables only
setup(vars = c("DUMMY_API_KEY", "DUMMY_VERBOSE"))

# Reconfigure all variables including those already set
setup(skip_configured = FALSE)

# Write to .Renviron instead of local config
setup(write = "renviron")
}

}
