% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/erase_renviron.R
\name{erase_renviron}
\alias{erase_renviron}
\title{Erase Environment Variables from .Renviron File}
\usage{
erase_renviron(
  var_names,
  package = get_package_name(),
  renviron_path = path.expand("~/.Renviron"),
  validate = TRUE,
  allowed_vars = NULL,
  verbose = FALSE
)
}
\arguments{
\item{var_names}{Character vector of variable names to erase from the .Renviron file.}

\item{package}{Character string with the package name. Defaults to \code{get_package_name()} to detect the calling package.
Set to NULL to skip validation.}

\item{renviron_path}{Path to the .Renviron file. Defaults to the user's home directory.}

\item{validate}{Logical; if TRUE (default), validates variable names against the
package's YAML configuration. Only applies if package is provided.}

\item{allowed_vars}{Optional character vector of allowed variable names for validation.
If NULL (default), the function will use the names from the package's YAML configuration.}

\item{verbose}{Logical. If TRUE, displays informative messages about the operation. Defaults to FALSE.}
}
\value{
Invisibly returns NULL.
}
\description{
Removes specified environment variables from the user's .Renviron file. This function
is useful when you want to unset previously configured environment variables, allowing
the package to fall back to runtime defaults or when cleaning up package configuration.
}
\details{
Note: This function only modifies the .Renviron file, not the current R session.
To also remove these variables from the current session, use \code{sync()} after
calling this function.
}
\examples{
\dontrun{
# Remove specific environment variables
erase_renviron(c("MY_PACKAGE_DATA_DIR", "MY_PACKAGE_API_KEY"),
               package = "mypackage")

# Remove all package variables at once
var_names <- names(get_config(package = "mypackage"))
erase_renviron(var_names, package = "mypackage")

# After erasing, sync the current session to reflect changes
sync(package = "mypackage", var_names = var_names)

# Using in a package configuration reset function
reset_package_config <- function() {
  pkg <- "mypackage"
  var_names <- names(get_config(package = pkg))
  erase_renviron(var_names, package = pkg)
  sync(package = pkg, var_names = var_names)
  cat("Package configuration has been reset. Runtime defaults will be used.\n")
}
}
  
}
