# ICY Configuration Template
#
# This file serves as the blueprint for your package configuration.
# A local copy will be created for users when the package loads.
# Users should edit their local config file, not this template.
# Generated by icy::create_template()/update_template() on: 2025-08-31

# Default configuration values
# This section defines the standard configuration variables and their default values
# that will be used when the package loads. Users can override these in their local
# configuration files. All variables should follow the naming convention: PACKAGE_VARIABLE
default:
  ICY_VERBOSE: no
  ICY_DEBUG: no

# Variable type definitions (metadata)
# Specifies the expected data type for each variable to enable validation and
# proper handling. Supported types: character, logical, integer, numeric, path
# Example: MY_VAR: character
types:
  ICY_VERBOSE: logical
  ICY_DEBUG: logical

# Human-readable descriptions for each variable (metadata)
# Provides clear explanations of what each configuration variable controls,
# helping users understand the impact of changing values. These descriptions
# appear in interactive configuration tools and documentation.
descriptions:
  ICY_VERBOSE: When set to TRUE, enables more detailed output for `icy` functions.
    Shows additional information about configuration operations, timing, and progress
    updates. Useful for understanding what the functions are doing during execution.
  ICY_DEBUG: 'When set to TRUE, enables maximum diagnostic information: displays detailed
    internal state, variable values, and step-by-step execution data. Use this when
    troubleshooting problems or developing new features.'

# Additional notes or warnings for variables (metadata)
# Optional section for important warnings, caveats, or additional context that
# doesn't fit in the main description. Use for security warnings, deprecation
# notices, or special instructions.
notes:
  ICY_VERBOSE: 'Default value: FALSE'
  ICY_DEBUG: 'Default value: FALSE'

# Valid options for choice-based variables (metadata)
# Defines the allowed values for variables that should be restricted to a
# specific set of choices. Values outside these options will trigger validation
# warnings. Useful for enumerated settings like log levels or modes.
options:

# Section inheritance relationships (metadata)
# Defines parent-child relationships between configuration sections, allowing
# sections to inherit values from others. Child sections override inherited values.
# Example: production: default (production inherits from default)
inheritances:
